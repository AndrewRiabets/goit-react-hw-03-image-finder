{"version":3,"sources":["Components/Searchbar/SearchBar.jsx","Servises/ImageAPI.jsx","Components/Loader/Loader.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ModalWindow/ModalWindow.jsx","Components/Button/Button.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","state","imputValue","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","className","this","type","autocomplete","autofocus","placeholder","onChange","Component","fetchPictures","inputValue","baseApi","apiKey","page","axios","get","then","r","data","hits","Loader","size","ImageGalleryItem","webformatURL","onOpen","largeImageURL","onClick","src","alt","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","Button","onLoadMoreClick","ImageGallery","pictures","error","largeUrl","showModal","status","getPictures","arr","newArr","map","picture","id","toggleModal","takeModalPicture","url","prevProps","prevState","prevInputValue","nextInputValue","prevPage","nextPage","length","catch","scrollTo","top","documentElement","scrollHeight","behavior","App","loading","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4cdae93c.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {\r\n        imputValue: '',\r\n    }\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ imputValue: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.imputValue.trim() === '') {\r\n            alert('Enter something');\r\n            return;\r\n        }\r\n            \r\n        this.props.onSubmit(this.state.imputValue);\r\n        this.setState({ imputValue: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n                    <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autocomplete=\"off\"\r\n                    autofocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={this.handleNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )}\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import axios from 'axios';\r\n\r\nexport function fetchPictures(inputValue, baseApi, apiKey, page) {\r\n  return axios\r\n    .get(\r\n      `${baseApi}?q=${inputValue}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(r => r.data.hits);\r\n}\r\n","import { ImSpinner } from 'react-icons/im';\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div>\r\n        <ImSpinner size=\"32\" className=\"icon-spin\" />\r\n        Loading...\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  onOpen,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => onOpen(largeImageURL)}>\r\n      <img src={webformatURL} alt=\"nice\" className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  onOpen: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onLoadMoreClick }) {\r\n  return (\r\n    <div className=\"more\">\r\n      <button type=\"submit\" className=\"Button\" onClick={onLoadMoreClick}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMoreClick: PropTypes.func,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchPictures } from '../../Servises/ImageAPI';\r\nimport Loader from '../Loader/Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../ModalWindow/ModalWindow';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class ImageGallery extends Component {\r\n  state = {\r\n    baseApi: 'https://pixabay.com/api/',\r\n    apiKey: '23201132-c06471d6b76c1dab4fe3668e8',\r\n    page: 1,\r\n    pictures: [],\r\n    error: null,\r\n    largeUrl: '',\r\n    showModal: false,\r\n    status: 'idle',\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { baseApi, apiKey, page, pictures } = this.state;\r\n    const prevInputValue = prevProps.inputValue;\r\n    const nextInputValue = this.props.inputValue;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevInputValue !== nextInputValue) {\r\n      this.setState({ status: 'pending' });\r\n      this.setState({ pictures: [] });\r\n\r\n      fetchPictures(nextInputValue, baseApi, apiKey, page)\r\n        .then(pictures => {\r\n          if (pictures.length === 0) {\r\n            return this.setState({ status: 'rejected' });\r\n          }\r\n          this.getPictures(pictures);\r\n        })\r\n        .then(this.setState({ status: 'resolved' }))\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    } else if (prevPage !== nextPage) {\r\n      this.setState({ status: 'pending' });\r\n\r\n      fetchPictures(nextInputValue, baseApi, apiKey, page)\r\n        .then(pictures => this.getPictures(pictures))\r\n        .then(this.setState({ status: 'resolved' }))\r\n        .then(() =>\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          }),\r\n        )\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  }\r\n\r\n  getPictures = arr => {\r\n    const newArr = arr.map(picture => {\r\n      return {\r\n        id: picture.id,\r\n        webformatURL: picture.webformatURL,\r\n        largeImageURL: picture.largeImageURL,\r\n      };\r\n    });\r\n    this.setState({\r\n      pictures: [...this.state.pictures, ...newArr],\r\n    });\r\n  };\r\n\r\n  onLoadMoreClick = () => {\r\n    this.setState({\r\n      page: this.state.page + 1,\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  takeModalPicture = url => {\r\n    this.setState({ largeUrl: url, showModal: true });\r\n  };\r\n\r\n  render() {\r\n    const { pictures, status, showModal, largeUrl } = this.state;\r\n    const { takeModalPicture, toggleModal, onLoadMoreClick } = this;\r\n    const { inputValue } = this.props;\r\n\r\n    if (status === 'idle') {\r\n      return <h1 className=\"title\">Want a picture?</h1>;\r\n    }\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return (\r\n        <h1 className=\"title\">\r\n          By searching <span className=\"rejected-span\">{inputValue}</span> you\r\n          will not find pictures on this resource, sorry :()\r\n        </h1>\r\n      );\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <div>\r\n          <ul className=\"ImageGallery\">\r\n            {pictures.map(picture => (\r\n              <ImageGalleryItem\r\n                key={picture.id}\r\n                webformatURL={picture.webformatURL}\r\n                largeImageURL={picture.largeImageURL}\r\n                onOpen={takeModalPicture}\r\n              />\r\n            ))}\r\n          </ul>\r\n          {showModal && (\r\n            <Modal onClose={toggleModal}>\r\n              <img src={largeUrl} alt=\"modal-img\" />\r\n              <button type=\"button\" onClick={toggleModal}>\r\n                Close Modal\r\n              </button>\r\n            </Modal>\r\n          )}\r\n          <Button onLoadMoreClick={onLoadMoreClick} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  inputValue: PropTypes.string,\r\n};\r\n","// import './App.css';=\r\nimport { Component } from 'react';\r\nimport SearchBar from './Components/Searchbar/SearchBar';\r\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    loading: false,\r\n    inputValue: '',\r\n  };\r\n\r\n  handleFormSubmit = inputValue => {\r\n    this.setState({ inputValue });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar onSubmit={this.handleFormSubmit} />\r\n        <ImageGallery inputValue={this.state.inputValue} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}